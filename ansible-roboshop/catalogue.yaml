- name: configuring catalogue application
  become: yes
  hosts: catalogue
  tasks: 
  - name: disabling default nodejs
    ansible.builtin.command: dnf module disable nodejs -y

  - name: enable nodejs 1.24
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: nodejs:20 installation
    ansible.builtin.dnf:
      name: nodejs
      state: present

  - name: creating system user - roboshop
    ansible.builtin.user:
      name: roboshop
      home: /app
      shell: /sbin/nologin
      system: true
  
  - name: copy the applcation code
    ansible.builtin.get_url:
     url: https://roboshop-artifacts.s3.amazonaws.com/catalogue-v3.zip
     dest: /tmp/catalogue.zip

  - name: unzip the application code
    ansible.builtin.unarchive:
      src: /tmp/catalogue.zip
      dest: /app
      remote_src: yes
  
  - name: install nodejs dependencies
    community.general.npm: 
      name: npm
      path: /app
  
  - name: creating catalogue.service 
    ansible.builtin.copy:
      src: catalogue.service
      dest: /etc/systemd/system/catalogue.service
  
  - name: Deamon reload
    ansible.builtin.systemd_service:
      dameon_reload: yes

  - name: start and enable catalogue
    ansible.builtin.service:
      name: catalogue
      state: restarted
      enabled: yes
  
  - name: Mongodb reop - Copying
    ansible.builtin.copy: 
      src: mongo.repo
      dest: /etc/yum.repos.d/mongo.repo

  - name: Mongodb - Client installation
    ansible.builtin.dnf:
      name: mongodb-mongosh
      state: present

  - name: check products loaded or not
    ansible.builtin.command: mongosh --host mongodb.daws84s.site --eval 'db.getMongo().getDBNames().indexOf("catalogue")'
    register: catalogue_output

  - name: Display the data present in mongodb
    ansible.builtin.debug:
      msg: "{{ catalogue_output }}"

  - name: Load Product informaiton if there is no data
    ansible.builtin.command: mongosh --host mongodb.singireddy.shop </app/db/master-data.js
    when: catatalogue_output.stdout | int < 0
